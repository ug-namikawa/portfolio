.mv-Slideshow {
  background-color: #252525;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  width: 100%;
  height: 100%;
  user-select: none;
  pointer-events: none;
  overflow: hidden;

  &:after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url(../image/texture-pattern.png);
    background-repeat: repeat;
    opacity: 0.3;
  }
}

$picture-count: 3;
$slideshow-scene-duration: 3000;
$slideshow-transition-duration: 1200;
$slideshow-loop-duration: ($slideshow-scene-duration + $slideshow-transition-duration) * $picture-count;

.mv-Slideshow_Image {
  position: absolute;
  top: -100%;
  left: -100%;
  right: -100%;
  bottom: -100%;
  margin: auto;
  min-width: 100%;
  min-height: 100%;
  max-width: inherit;
  transform-origin: center center;
  transform: scale(1);
  animation-fill-mode: both, both;
  animation-timing-function: linear, linear;
  animation-iteration-count: infinite, infinite;
  will-change: opacity, transform;

  @for $i from 1 through $picture-count {
    &[data-count="#{$i}"] {
      animation-name: mv-Slideshow_ImageAnimation-TransitionEffect-#{$i}, mv-Slideshow_ImageAnimation-SceneEffect-#{$i};
      animation-duration: #{$slideshow-loop-duration}ms, #{$slideshow-loop-duration}ms;
      animation-delay: #{$mv-Slideshow-animation-timing}ms, #{$mv-Slideshow-animation-timing}ms;

      @if $i == 1 {
        opacity: 1;
      } @else {
        opacity: 0;
      }
    }
  }
}

[data-popup-player="true"] .mv-Slideshow_Image,
[data-popup-player="closing"] .mv-Slideshow_Image {
  animation-play-state: paused;
}

@for $i from 1 through $picture-count {
  // 注意: 最初のアニメーションには開始トランジションが最終に移動することに注意

  @if $i == 1 {
    // 1回目

    // トランジション:アウト開始タイミング(0秒後からということが分かるようにあえて0をつけている)
    $transitionOutStartTiming: 0 + $slideshow-scene-duration;
    // トランジション:アウト終了タイミング
    $transitionOutEndTiming: $transitionOutStartTiming + $slideshow-transition-duration;
    // シーン終了タイミング
    $sceneEndTiming: $transitionOutEndTiming;

    // シーン開始タイミング
    $sceneStartTiming: $slideshow-loop-duration - $slideshow-transition-duration;
    // トランジション:イン開始タイミング
    $transitionInStartTiming: $sceneStartTiming;
    // トランジション:イン終了タイミング
    $transitionInEndTiming: $sceneStartTiming + $slideshow-transition-duration;



    @keyframes mv-Slideshow_ImageAnimation-SceneEffect-#{$i} {
      // 開始直後のスケールはトランジション後
      $startTransitionEndScale: 1 + 0.05 * ($slideshow-transition-duration / ($slideshow-scene-duration + $slideshow-transition-duration * 2));

      0% {
        transform: scale($startTransitionEndScale);
        filter: blur(0);
      }

      // 終了
      #{$sceneEndTiming / $slideshow-loop-duration * 100}% {
        transform: scale(1.05);
        filter: blur(10px);
      }

      // 開始
      #{$sceneStartTiming / $slideshow-loop-duration * 100}% {
        transform: scale(1);
      }

      100% {
        transform: scale($startTransitionEndScale);
      }
    }

    @keyframes mv-Slideshow_ImageAnimation-TransitionEffect-#{$i} {
      0% {
        opacity: 1;
      }
      // out切り替え開始
      #{$transitionOutStartTiming / $slideshow-loop-duration * 100}% {
        opacity: 1;
      }
      // out切り替え終了
      #{$transitionOutEndTiming / $slideshow-loop-duration * 100}% {
        opacity: 0;
      }

      // in切り替え開始
      #{$transitionInStartTiming / $slideshow-loop-duration * 100}% {
        opacity: 0;
      }
      // in切り替え終了
      #{$transitionInEndTiming / $slideshow-loop-duration * 100}% {
        opacity: 1;
      }
    }

  } @else {
    // 2回目以降のキーフレーム

    // シーン開始タイミング
    $sceneStartTiming: ($i - 1) * $slideshow-scene-duration + ($i - 2) * $slideshow-transition-duration;
    // トランジション:イン開始タイミング
    $transitionInStartTiming: $sceneStartTiming;
    // トランジション:イン終了タイミング
    $transitionInEndTiming: $sceneStartTiming + $slideshow-transition-duration;
    // トランジション:アウト開始タイミング
    $transitionOutStartTiming: $transitionInEndTiming + $slideshow-scene-duration;
    // トランジション:アウト終了タイミング
    $transitionOutEndTiming: $transitionOutStartTiming + $slideshow-transition-duration;
    // シーン終了タイミング
    $sceneEndTiming: $transitionOutEndTiming;

    @keyframes mv-Slideshow_ImageAnimation-SceneEffect-#{$i} {
      // 開始
      0% {
        transform: scale(1);
        filter: blur(0);
      }

      #{$sceneStartTiming / $slideshow-loop-duration * 100}% {
        transform: scale(1);
        filter: blur(0);
      }

      // 終了
      #{$sceneEndTiming / $slideshow-loop-duration * 100}% {
        transform: scale(1.05);
        filter: blur(10px);
      }
      @if $sceneEndTiming != $slideshow-loop-duration {
        100% {
          transform: scale(1.05);
          filter: blur(10px);
        }
      }
    }

    @keyframes mv-Slideshow_ImageAnimation-TransitionEffect-#{$i} {
      // in切り替え開始
      0% {
        opacity: 0;
      }
      #{$transitionInStartTiming / $slideshow-loop-duration * 100}% {
        opacity: 0;
      }

      // in切り替え終了
      #{$transitionInEndTiming / $slideshow-loop-duration * 100}% {
        opacity: 1;
      }

      // out切り替え開始
      #{$transitionOutStartTiming / $slideshow-loop-duration * 100}% {
        opacity: 1;
      }

      // out切り替え終了
      #{$transitionOutEndTiming / $slideshow-loop-duration * 100}% {
        opacity: 0;
      }
      @if $transitionOutEndTiming != $slideshow-loop-duration {
        100% {
          opacity: 0;
        }
      }
    }
  }

}
